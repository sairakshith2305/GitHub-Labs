name: Model Retraining on Push to Main

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
permissions:
  contents: write
  pull-requests: write
  
jobs:
  retrain:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: pip install -r Lab_2/requirements.txt

    - name: Create Required Directories
      run: |
        # Create metrics and models directories if they don't exist
        mkdir -p Lab_2/metrics
        mkdir -p Lab_2/models
        
        # Create .gitkeep files to ensure directories are tracked by git
        touch Lab_2/metrics/.gitkeep
        touch Lab_2/models/.gitkeep
        
        # Check if directories were newly created and need to be committed
        if [ ! -d "Lab_2/metrics" ] || [ ! -d "Lab_2/models" ]; then
          echo "DIRS_CREATED=true" >> $GITHUB_ENV
        else
          echo "DIRS_CREATED=false" >> $GITHUB_ENV
        fi

    - name: Generate and Store Timestamp
      run: |
        timestamp=$(date '+%Y%m%d%H%M%S')
        echo "$timestamp" > timestamp.txt
        echo "TIMESTAMP=$timestamp" >> $GITHUB_ENV  # Store in environment variable
      id: timestamp 

    - name: Check File Permissions
      run: |
        ls -l ./Lab_2/src/train_model.py

    - name: Set File Permissions
      run: |
        chmod +x ./Lab_2/src/train_model.py

    - name: Retrain Model
      run: |
        timestamp=$(cat timestamp.txt)
        python ./Lab_2/src/train_model.py --timestamp "$timestamp"

    - name: Evaluate Model and Log Metrics
      run: |
        timestamp=$(cat timestamp.txt)
        python ./Lab_2/src/evaluate_model.py --timestamp "$timestamp"
        metrics_filename="${timestamp}_metrics.json"
        
        # Move the metrics file to the metrics directory
        if [ -f "$metrics_filename" ]; then
          mv $metrics_filename Lab_2/metrics/$metrics_filename
        else
          echo "Warning: Metrics file $metrics_filename not found in current directory"
          # Check if it's already in the right place
          if [ ! -f "Lab_2/metrics/$metrics_filename" ]; then
            echo "Error: Metrics file not found anywhere"
            exit 1
          fi
        fi
      continue-on-error: false

    - name: Store and Version the New Model
      run: |
        timestamp=$(cat timestamp.txt)
        model_filename="model_${timestamp}_dt_model.joblib"
        
        # Move the model file to the models directory
        if [ -f "$model_filename" ]; then
          mv $model_filename Lab_2/models/$model_filename
        else
          echo "Warning: Model file $model_filename not found in current directory"
          # Check if it's already in the right place
          if [ ! -f "Lab_2/models/$model_filename" ]; then
            echo "Error: Model file not found anywhere"
            exit 1
          fi
        fi

    - name: Commit and Push Changes
      run: |
        git config --global user.email "rakshith2305.sr@gmail.com"
        git config --global user.name "sairakshith2305"
        
        # Add the directories if they were newly created
        git add Lab_2/metrics/.gitkeep Lab_2/models/.gitkeep 2>/dev/null || true
        
        # Get the timestamp and filenames
        timestamp=${{ env.TIMESTAMP }}
        metrics_filename="${timestamp}_metrics.json"
        model_filename="model_${timestamp}_dt_model.joblib"
        
        # Add the new model and metrics files
        git add Lab_2/metrics/$metrics_filename Lab_2/models/$model_filename
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add metrics and updated model - Timestamp: $timestamp"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}